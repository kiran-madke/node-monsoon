$(window).on('load', function() {
    loadDataFile('');
});

function toggleDecisionBtn(n, t, i) {
    for (var r = 0; r < t.length; r++) r === 0 ? $("#" + t[r].id).change(DecisionButtonStyles.LEFT_BUTTON_STYLE) : r === t.length - 1 ? $("#" + t[r].id).change(DecisionButtonStyles.RIGHT_BUTTON_STYLE) : $("#" + t[r].id).change(DecisionButtonStyles.CENTER_BUTTON_STYLE);
    $("#" + n).change(i)
}

function addFollowUpBox(n) {
    var t = addOuterDiv(n),
        i = addInfoText(n);
    return (n.boxType === BoxTypes.DECISION_STARTING_POINT || n.boxType === BoxTypes.DECISION_GOING_THROUGH) && i.appendChild(getButtonRow(n)), t.appendChild(i), t
}

function getBoxInfo(n) {
    for (var i = "", t = 0; t < text.length; t++)
        if (text[t].boxId === n) { i = text[t]; break }
    return i
}

function addOuterDiv(n) { var t = document.createElement("div"); return t.setAttribute("id", n.boxId), t.setAttribute("class", n.boxType + Dimensions.OUTER), t }

function addInfoText(n) {
    var i = document.createElement("div"),
        t;
    return i.setAttribute("class", n.boxType + Dimensions.INNER), t = document.createElement("p"), t.setAttribute("class", StyleClass.MINFO_TEXT1), t.innerHTML = n.infoText, i.appendChild(t), i
}

function getBoxArray(n) {
    var t = 0,
        i = [];
    do i.push(n), n.boxType === BoxTypes.DECISION_STARTING_POINT || n.boxType === BoxTypes.DECISION_GOING_THROUGH || n.boxType === BoxTypes.CLINICAL_CONDITION_EXIT_BOX || n.boxType === BoxTypes.ACTIVITY_EXIT_BOX ? t = 1 : (t = 0, n = getBoxInfo(n.nextBox)); while (t !== 1);
    return i
}

function getButtonRow(n) { for (var i, r = document.createElement("table"), u = document.createElement("tr"), f = n.buttons.length, t = 0; t < f; t++) i = new constructButton(n, t), t === 0 ? i.addLeftButton() : t === f - 1 ? i.addRightButton() : i.addCenterButton(), u.appendChild(i.getButton()); return r.appendChild(u), r }

function loadDataFile(n) {
    var h = document.getElementById("mainDiv"),
        t, u, o, e, r, f, i, s;
    if (n === "") {
        if (u = 0, u === 0) try {
            t = text[u];
            u++
        } catch (c) {
            f = new exception("Algorithm Data file not found", c);
            f.displayMessage()
        }
        for (o = getBoxArray(t), e = 0; e < o.length; e++) h.appendChild(addFollowUpBox(o[e]))
    } else {
        try { r = JSON.parse(n) } catch (c) {
            f = new exception("Algorithm history string parsing exception", c);
            f.displayMessage()
        }
        for (i = 0; i < r.length; i++) t = getBoxInfo(r[i].id), h.appendChild(addFollowUpBox(t)), s = "#" + t.boxId, $(s).css("display", "none"), $(s).slideDownBox(Scroll.LENGTH_SHORT), (t.boxType === BoxTypes.DECISION_STARTING_POINT || t.boxType === BoxTypes.DECISION_GOING_THROUGH) && r[i].eventAction !== "" && toggleDecisionBtn(r[i].eventAction, document.getElementById(r[i].eventAction).parentNode.childNodes, 0)
    }
    return addFooter(), !0
}

function saveHistory() {
    for (var n, u, f, i, t = [], e = document.getElementById("mainDiv").childNodes, r = 0; r < e.length; r++)
        if (n = getBoxInfo(e[r].id), n.boxType === BoxTypes.DECISION_STARTING_POINT || n.boxType === BoxTypes.DECISION_GOING_THROUGH) {
            for (u = !1, i = 0; i < n.buttons.length; i++)
                if (f = "box" + n.boxId + "_" + i, document.getElementById(f).style.backgroundColor === "rgb(204, 61, 68)") { u = !0; break }
            u ? t.push({ id: n.boxId, eventAction: f }) : t.push({ id: n.boxId, eventAction: "" })
        } else n.boxType === BoxTypes.FOOTER || t.push({ id: n.boxId });
    return JSON.stringify(t)
}

function sendHistory() { Android.saveData(saveHistory()) }

function addFooter() {
    var i = document.getElementsByTagName("body")[0],
        t = document.createElement("div"),
        n, r;
    t.setAttribute("class", StyleClass.FOOTER);
    t.setAttribute("id", "998");
    n = getBoxInfo("998");
    r = document.createElement("table");
    typeof n.extraButtons != "undefined" && n.extraButtons.length > 0 && i.appendChild(addExtraButtons(n))
}

function getReferenceTextRow(n, t) {
    var f = document.createElement("tr"),
        e = document.createTextNode(n.referenceText),
        u = document.createElement("p"),
        i, r;
    return u.setAttribute("class", StyleClass.TEXT_LEFT), u.innerHTML = e.data, i = document.createElement("div"), i.setAttribute("class", StyleClass.REFERENCE_BOX), i.appendChild(u), r = document.createElement("td"), r.setAttribute("colspan", (t / 1).toString()), r.appendChild(i), f.appendChild(r), f
}

function getAbbreviationTextRow(n, t) {
    var f = document.createElement("tr"),
        e = document.createTextNode(n.abbreviationText),
        u = document.createElement("p"),
        i, r;
    return u.setAttribute("class", StyleClass.TEXT_LEFT), u.innerHTML = e.data, i = document.createElement("div"), i.setAttribute("class", StyleClass.REFERENCE_BOX), i.appendChild(u), r = document.createElement("td"), r.setAttribute("colspan", (t / 1).toString()), r.appendChild(i), f.appendChild(r), f
}

function addResetButton(n) {
    var i = document.createElement("div"),
        t = document.createElement("button"),
        r;
    return t.setAttribute("class", StyleClass.RESET_BUTTON), t.setAttribute("id", "resetButton"), r = document.createTextNode(n.resetButtonText), t.innerHTML = r.nodeValue, i.appendChild(t), i
}

function addExtraButtons(n) {
    var f = n.extraButtons,
        i = document.createElement("div"),
        r, t, u;
    for (i.setAttribute("class", "footer-div"), i.setAttribute("id", "998"), r = getColspanFactor(f), t = document.createElement("table"), t.setAttribute("class", "footer-button-table"), u = 0; u < f.length; u++) t.appendChild(getExtraButtonRow(f[u], r));
    return n.hasAbbreviation && t.appendChild(getAbbreviationTextRow(n, r)), n.hasFootnote && t.appendChild(getReferenceTextRow(n, r)), i.appendChild(t), i
}

function getExtraButtonRow(n, t) { for (var i, f = document.createElement("tr"), r = n.buttonRow, e = makeSizer(r.length), o = t / r.length, u = 0; u < r.length; u++) i = document.createElement("td"), i.setAttribute("class", "footer-button"), i.setAttribute("colspan", o.toString()), i.style.width = e, i.appendChild(getFooterButton(r[u])), f.appendChild(i); return f }

function getFooterButton(n) {
    var t = document.createElement("button"),
        u, i, r;
    return t.setAttribute("class", "mfooter-button"), t.setAttribute("id", n.buttonId), u = Object.keys(n), u.indexOf("image") === 0 ? (i = document.createElement("img"), i.setAttribute("id", "algoPdf"), i.setAttribute("src", "algo_pdf_white.png"), i.setAttribute("alt", "Static version"), t.appendChild(i), r = document.createElement("a"), r.setAttribute("href", "flipView"), r.appendChild(t), r) : (n.buttonId === "moreInfoButton" ? (m = document.createElement("div"), m.innerHTML = n.text, m = m.firstElementChild, t.innerHTML = m.innerText, m.innerHTML = "", m.appendChild(t), m) : (t.innerHTML = document.createTextNode(n.text).data, t))
}

function makeSizer(n) { return 100 / n + "%" }

function getColspanFactor(n) { for (var t = 1, i = 0; i < n.length; i++) t = t * n[i].buttonRow.length; return t }

function addStaticAssets() {
    var n = document.getElementById("staticMainDiv"),
        t = getBoxInfo("998");
    n.appendChild(getStaticImage(t.staticImageName));
    n.appendChild(addStaticFooter(t))
}

function addStaticFooter(n) { var t = document.createElement("table"); return t.appendChild(getStaticFootNoteButtonRow(n)), n.hasAbbreviation && t.appendChild(getStaticAbbreviationTextRow(n)), n.hasFootnote && t.appendChild(getStaticReferenceTextRow(n)), t }

function getStaticImage(n) { var t = document.createElement("img"); return t.setAttribute("src", n.concat(".png")), t.style.width = "100%", t }

function getStaticFootNoteButtonRow() {
    var n = document.createElement("tr"),
        t = document.createElement("td");
    return t.appendChild(addStaticFlipPdfButton()), n.appendChild(t), n
}

function getStaticReferenceTextRow(n) {
    var u = document.createElement("tr"),
        f = document.createTextNode(n.referenceText),
        i = document.createElement("p"),
        t, r;
    return i.setAttribute("class", StyleClass.TEXT_LEFT), i.innerHTML = f.data, t = document.createElement("div"), t.setAttribute("class", StyleClass.STATIC_REFERENCE_BOX), t.appendChild(i), r = document.createElement("td"), r.appendChild(t), u.appendChild(r), u
}

function getStaticAbbreviationTextRow(n) {
    var u = document.createElement("tr"),
        f = document.createTextNode(n.abbreviationText),
        i = document.createElement("p"),
        t, r;
    return i.setAttribute("class", StyleClass.TEXT_LEFT), i.innerHTML = f.data, t = document.createElement("div"), t.setAttribute("class", StyleClass.STATIC_REFERENCE_BOX), t.appendChild(i), r = document.createElement("td"), r.appendChild(t), u.appendChild(r), u
}

function addStaticFlipPdfButton() {
    var i = document.createElement("img"),
        n, t;
    return i.setAttribute("src", "algo.png"), i.setAttribute("class", StyleClass.PDF_IMAGE), n = document.createElement("button"), n.setAttribute("id", "pdf_button"), n.setAttribute("class", StyleClass.FLIP_PDF_BUTTON), t = document.createElement("a"), t.setAttribute("href", "flipView"), n.appendChild(i), t.appendChild(n), t
}
var constructButton, exception;
$(document).ready(function() {
    var t, n = !1;
    $("body").on("click", "td", function() {
        var n = $(this).attr("id"),
            u, f, i;
        if (n !== undefined) {
            u = document.getElementById(n);
            f = document.getElementById(n).parentNode.childNodes;
            toggleDecisionBtn(n, f, 0);
            var e = u.parentNode.parentNode.parentNode.parentNode,
                o = getBoxInfo(e.id),
                r = document.getElementById(e.id);
            if (r.nextSibling !== null)
                while (r.nextSibling) mainDiv.removeChild(r.nextSibling);
            var s = n.split("_"),
                h = parseInt(s[1], 10),
                c = o.buttons;
            for (followUpBoxInfo = getBoxInfo(c[h].eventAction), boxArray = getBoxArray(followUpBoxInfo), i = 0; i < boxArray.length; i++) mainDiv.appendChild(addFollowUpBox(boxArray[i])), $("#" + boxArray[i].boxId).css("display", "none").slideDownBox(Scroll.LENGTH_LONG);
            t = saveHistory();
            console.log("History on button click :" + t)
        }
    });
    $("body").on("click", "button", function() {
        switch ($(this).attr("id")) {
            case "refButton":
                n ? ($("#refButton").removeClass("footer-button-click").addClass("mfooter-button"), $(".reference-box").slideUpBox()) : ($("#refButton").removeClass("mfooter-button").addClass("footer-button-click"), $(".reference-box").slideDownBox(Scroll.LENGTH_LONG));
                n = !n;
                break;
            case "resetButton":
                n = !n;
                for (var t = document.getElementById("mainDiv"); t.firstChild;) t.removeChild(t.firstChild);
                document.getElementsByTagName("body")[0].removeChild(document.getElementById("998"));
                loadDataFile("")
        }
    })
});
constructButton = function(n, t) {
    function r(r) {
        var o, s, f, e, h;
        if (i = document.createElement("td"), o = n.buttons, s = o.length, i.setAttribute("class", r), i.style.width = u(s), i.setAttribute("id", "box" + n.boxId + "_" + t), f = document.createElement("p"), f.setAttribute("class", StyleClass.MINFO_TEXT_BOLD), e = n.buttons[t].text, e !== undefined && e !== "") f.innerHTML = e, i.appendChild(f);
        else try { throw "Cannot read Button text property"; } catch (c) {
            h = new exception("Button text property is missing or empty", c);
            h.displayMessage()
        }
    }

    function u(n) { return 100 / n + "%" }
    var i;
    return { addLeftButton: function() { r(ButtonTypes.LEFT_BUTTON) }, addRightButton: function() { r(ButtonTypes.RIGHT_BUTTON) }, addCenterButton: function() { r(ButtonTypes.CENTER_BUTTON) }, getButton: function() { return i } }
};
exception = function(n, t) {
    return {
        displayMessage: function() {
            var r = document.createTextNode(n + "<br/>" + t.toString()),
                i = document.createElement("p");
            i.setAttribute("class", StyleClass.EXCEPTION_MESSAGE);
            i.innerHTML = r.data;
            document.getElementsByTagName("body")[0].appendChild(i)
        }
    }
};
const BoxTypes = { CLINICAL_CONDITION_STARTING_POINT: "clinical-condition-starting-point", DECISION_STARTING_POINT: "decision-starting-point", ACTIVITY_STARTING_POINT: "activity-starting-point", ACTIVITY_GOING_THROUGH: "activity-going-through", DECISION_GOING_THROUGH: "decision-going-through", CLINICAL_CONDITION_GOING_THROUGH: "clinical-condition-going-through", CLINICAL_CONDITION_EXIT_BOX: "clinical-condition-exit-box", ACTIVITY_EXIT_BOX: "activity-exit-box", FOOTER: "footer", PUSH_BOX: "push" },
    ButtonTypes = { LEFT_BUTTON: "left-button", RIGHT_BUTTON: "right-button", CENTER_BUTTON: "center-button" },
    DecisionButtonStyles = { LEFT_BUTTON_STYLE: 1, RIGHT_BUTTON_STYLE: 2, CENTER_BUTTON_STYLE: 3 },
    Dimensions = { INNER: "-inner", OUTER: "-outer" },
    StyleClass = { MINFO_TEXT1: "minfo-text1", MINFO_TEXT_BOLD: "minfo-text-bold", ABB_BUTTON: "abb-button", PDF_IMAGE: "pdf-image", REFERENCE_BOX: "reference-box", STATIC_REFERENCE_BOX: "static-reference-box", TEXT_LEFT: "text-left", FOOTER: "footer", FLIP_PDF_BUTTON: "flip-pdf-button", EXCEPTION_MESSAGE: "exception-message", RESET_BUTTON: "reset-button" },
    Scroll = { LENGTH_SHORT: 100, LENGTH_LONG: 700 },
    FooterButtons = { PDF_BUTTON: "pdfButton", RESET_BUTTON: "resetButton", REF_BUTTON: "refButton", MORE_INFO_BUTTON: "moreInfoButton" };
(function(n) {
    n.fn.change = function(t) { return t === 0 ? this.each(function() { n(this).css({ background: "#cc3d44", color: "white", boxShadow: "0 0 0 0 #ffffff" }) }) : t === 1 ? this.each(function() { n(this).css({ background: "#ffffff", color: "#999999", boxShadow: "0 0 0 0 #ffffff" }) }) : t === 2 ? this.each(function() { n(this).css({ background: "#ffffff", color: "#999999", boxShadow: "0 0 0 0 #ffffff" }) }) : t === 3 ? this.each(function() { n(this).css({ background: "#ffffff", color: "#999999", boxShadow: "0 0 0 0 #ffffff" }) }) : void 0 };
    n.fn.scroll = function(t) { return this.each(function() { n("html, body").animate({ scrollTop: n(this).offset().top }, t) }) };
    n.fn.slideUpBox = function() { return this.each(function() { n(this).slideUp("fast", function() { n(this).scroll() }) }) };
    n.fn.slideDownBox = function(t) { return this.each(function() { n(this).slideDown("150", function() { n(this).scroll(t) }) }) }
})(jQuery);