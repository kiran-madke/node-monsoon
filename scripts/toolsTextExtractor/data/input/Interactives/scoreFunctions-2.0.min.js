$(window).on('load', function () {
    loadDataFile('');
});

function loadDataFile(e) {
    "score" === document.title.toLowerCase() && addHeader();
    var t = document.getElementById("mainDiv"),
        o = !1,
        s = scoreData.length - 2;
    if (scoreHistory = [], "" === e)
        for (n = 0; s > n; n++) {
            var r = "false";
            n > 0 && n < scoreData.length - 3 && (1 === n && (r = "true"), scoreHistory.push({
                rowIndex: n.toString(),
                cellIndex: "",
                status: "false",
                isExpanded: r
            }))
        } else o = !0;
    for (var n = 1; s > n; n++) {
        var l = addOuterDiv(n, o),
            a = addInnerDiv(n, o);
        a.appendChild(getScore(n, o)), l.appendChild(a), t.appendChild(l)
    }
    if (o) try {
        scoreHistory = JSON.parse(e), loadHistory(scoreHistory)
    } catch (c) {
        console.log(c)
    }
    return "score" === document.title.toLowerCase() && addFooter(), !0
}

function addHeader() {
    "" !== scoreData[0].headerText && "undefined" != typeof scoreData[0].headerText && document.getElementsByTagName("body")[0].insertBefore(getHeader(), document.getElementById("mainDiv"))
}

function getHeader() {
    var e = document.createElement("div");
    e.setAttribute("id", "headerDiv");
    var t = document.createElement("p");
    return t.setAttribute("class", "text-left"), t.innerHTML = scoreData[0].headerText, e.appendChild(t), e
}

function getScore(e, t) {
    var o = document.createElement("table");
    o.setAttribute("class", "table-block"), o.setAttribute("id", scoreData[e].boxId);
    var s = [];
    0 === e || (s = 1 === e ? getRow(scoreData[e], e, Mode.FOCUS) : e === scoreData.length - 3 ? getResultRow() : t ? getRow(scoreData[e], e, Mode.FOCUS) : getRow(scoreData[e], e, Mode.BLUR));
    for (var r = 0; r < s.length; r++) o.appendChild(s[r]), $("#" + s[r].id).css("display", "none").slideDownBox(Scroll.LENGTH_LONG);
    return o
}

function addOuterDiv(e, t) {
    var o = document.createElement("div");
    return t ? 1 === e ? (o.setAttribute("class", ScoreStyleClass.SCORE_BLOCK_TOP_OUTER), o.setAttribute("id", "box".concat(scoreData[e].boxId))) : e === scoreData.length - 3 ? (o.setAttribute("class", ScoreStyleClass.SCORE_RESULT_OUTER), o.setAttribute("id", "scoreBox")) : (o.setAttribute("class", ScoreStyleClass.SCORE_BLOCK_MIDDLE_OUTER), o.setAttribute("id", "box".concat(scoreData[e].boxId))) : 1 === e ? (o.setAttribute("class", ScoreStyleClass.SCORE_BLOCK_TOP_OUTER), o.setAttribute("id", "box".concat(scoreData[e].boxId))) : e === scoreData.length - 3 ? (o.setAttribute("class", ScoreStyleClass.SCORE_RESULT_OUTER), o.setAttribute("id", "scoreBox")) : (o.setAttribute("class", ScoreStyleClass.SCORE_BLOCK_BLUR), o.setAttribute("id", "box".concat(scoreData[e].boxId))), o
}

function addInnerDiv(e, t) {
    var o = document.createElement("div");
    return o.setAttribute("id", "boxInner".concat(scoreData[e].boxId)), t ? 1 === e ? o.setAttribute("class", ScoreStyleClass.SCORE_BLOCK_TOP_INNER) : e === scoreData.length - 3 ? o.setAttribute("class", ScoreStyleClass.SCORE_RESULT_INNER) : o.setAttribute("class", ScoreStyleClass.SCORE_BLOCK_MIDDLE_INNER) : 1 === e ? o.setAttribute("class", ScoreStyleClass.SCORE_BLOCK_TOP_INNER) : e === scoreData.length - 3 && o.setAttribute("class", ScoreStyleClass.SCORE_RESULT_INNER), o
}

function getRow(e, t, o) {
    var s = [];
    s.push(getScoreRow(new ScoreCell(e.questionText, e.maxValue, t, 0, o)));
    for (var r = 0; r < e.options.length; r++) s.push(getScoreRow(new ScoreCell(e.options[r].text, e.options[r].value, t, r + 1, o)));
    return s
}

function getResultRow() {
    var e = getBoxInfo("997"),
        t = [],
        o = document.createElement("tr"),
        s = document.createElement("td");
    s.setAttribute("class", "text-cell-blur");
    var r = document.createElement("p");
    r.setAttribute("class", "score-result-text"), r.innerHTML = document.createTextNode(e.scoreInfotext).data, s.appendChild(r);
    var n = document.createElement("td");
    n.setAttribute("class", "value-cell-blur");
    var l = document.createElement("p");
    return l.setAttribute("class", "score-text"), l.setAttribute("id", "scoreSum"), n.appendChild(l), o.appendChild(s), o.appendChild(n), t.push(o), t
}

function ScoreCell(e, t, o, s, r) {
    var n = new Object;
    return n.text = e, n.value = t, n.parentIndex = o, n.childIndex = s, n.mode = r, n
}

function getScoreRow(e) {
    var t = document.createElement("tr");
    t.setAttribute("id", getRowId(e.parentIndex, e.childIndex));
    var o = document.createElement("td"),
        s = document.createElement("p"),
        r = document.createElement("td"),
        n = document.createElement("p");
    return 0 === e.childIndex && e.mode === Mode.FOCUS ? (o.setAttribute("class", "text-cell-top"), r.setAttribute("class", "value-cell-top"), s.setAttribute("class", ScoreStyleClass.QUESTION_TEXT), n.setAttribute("class", ScoreStyleClass.MAX_VALUE)) : e.childIndex > 0 && e.mode === Mode.FOCUS ? (o.setAttribute("class", "text-cell-middle"), r.setAttribute("class", "value-cell-middle"), s.setAttribute("class", ScoreStyleClass.OPTION_TEXT), n.setAttribute("class", ScoreStyleClass.OPTION_VALUE)) : (e.childIndex > 0 && (t.style.display = "none"), o.setAttribute("class", "text-cell-blur"), r.setAttribute("class", "value-cell-blur"), s.setAttribute("class", ScoreStyleClass.TEXT_BLUR), n.setAttribute("class", ScoreStyleClass.VALUE_BLUR)), s.innerHTML = document.createTextNode(e.text).data, o.appendChild(s), n.innerHTML = document.createTextNode(e.value).data, r.appendChild(n), t.appendChild(o), t.appendChild(r), t
}

function showNextScoreBlock(e) {
    var t = new ScoreTable(e),
        o = t.tableNodes.length,
        s = document.getElementById(t.tableNodeId);
    if (currentPosition = getTableBlockIndex(t.boxId), t.clickedRow >= 0) {
        for (var r = document.getElementById(s.parentNode.id), n = document.getElementById(s.parentNode.parentNode.id), l = [], a = 1; o > a; a++) l.push(t.tableNodes[a]);
        var c = scoreHistory[currentPosition];
        if (JSON.parse(c.status)) {
            for (var i = 0; i < l.length; i++) {
                $(l[i]).slideDownBox();
                var d = l[i].childNodes;
                "text-cell-select" === d[0].classList[0] && (d[0].classList.remove("text-cell-select"), d[0].classList.add("text-cell-middle")), "value-cell-select" === d[1].classList[0] && (d[1].classList.remove("value-cell-select"), d[1].classList.add("value-cell-middle"))
            }
            c.status = "false", c.cellIndex = "", c.isExpanded = "true", expandRow(n, r, currentPosition)
        } else {
            var u = t.clickedRow;
            if (u >= 0) {
                for (var m = 0; m < l.length; m++) m !== u && $("#" + l[m].id).slideUp("300");
                c.status = "true", c.cellIndex = u.toString(), c.isExpanded = "false";
                var b = l[u].childNodes;
                collapseRow(n, r, b)
            }
            currentPosition < getScoreLength() - 2 && !JSON.parse(scoreHistory[currentPosition + 1].status) && openNextBlock(currentPosition + 2)
        }
        console.log(JSON.stringify(scoreHistory)), generateResult()
    }
}

function openNextBlock(e) {
    var t = scoreHistory[e - 1];
    t.isExpanded = "true", console.log(scoreHistory[e - 1]);
    var o = document.getElementById("box".concat(e));
    o.classList.remove("score-block-blur"), o.classList.add("score-block-middle-outer");
    var s = document.getElementById("boxInner".concat(e));
    s.setAttribute("class", "score-block-middle-inner");
    for (var r = document.getElementById(e).childNodes, n = 0; n < r.length; n++) {
        r[n].style.display = "table-row";
        var l = r[n].childNodes;
        0 === n ? (l[0].classList.remove("text-cell-blur"), l[0].classList.add("text-cell-top"), l[0].childNodes[0].classList.remove("text-blur"), l[0].childNodes[0].classList.add("question-text"), l[1].classList.remove("value-cell-blur"), l[1].classList.add("value-cell-top"), l[1].childNodes[0].classList.remove("value-blur"), l[1].childNodes[0].classList.add("max-value")) : (l[0].classList.remove("text-cell-blur"), l[0].classList.add("text-cell-middle"), l[0].childNodes[0].classList.remove("text-blur"), l[0].childNodes[0].classList.add("option-text"), l[1].classList.remove("value-cell-blur"), l[1].classList.add("value-cell-middle"), l[1].childNodes[0].classList.remove("value-blur"), l[1].childNodes[0].classList.add("option-value"))
    }
}

function generateResult() {
    for (var e = !1, t = scoreHistory.length, o = 0; t > o; o++) {
        if (!JSON.parse(scoreHistory[o].status)) {
            e = !1;
            break
        }
        e = !0
    }
    var s = getBoxInfo("997").boxType,
        r = document.getElementById("boxInner997"),
        n = document.getElementById("scoreBox"),
        l = document.getElementById("scoreSum").parentNode;
    if (e) {
        var a = getInference(e, s);
        n.classList.remove("score-result-outer"), n.classList.add("score-result-outer1"), r.classList.remove("score-result-inner"), r.classList.add("score-result-inner1"), l.classList.remove("value-cell-blur"), l.classList.add("value-cell-blur1");
        var c, l;
        s === ResultBoxTypes.RESULT_SCORE_BOX ? (document.getElementById("mainDiv").appendChild(getResultBox()), $("#resultBox").slideDown(), c = document.getElementById("resultText"), c.innerHTML = a[0].inferenceText, l = document.getElementById("scoreSum"), l.innerHTML = a[0].scoreSum) : s === ResultBoxTypes.RESULT_BOX ? (document.getElementById("mainDiv").appendChild(getResultBox()), $("#resultBox").slideDown(), c = document.getElementById("resultText"), c.innerHTML = a[0].inferenceText) : s === ResultBoxTypes.SCORE_BOX && (l = document.getElementById("scoreSum"), l.innerHTML = a[0].scoreSum)
    } else n.classList.remove("score-result-outer1"), n.classList.add("score-result-outer"), r.classList.remove("score-result-inner1"), r.classList.add("score-result-inner"), l.classList.remove("value-cell-blur1"), l.classList.add("value-cell-blur"), s === ResultBoxTypes.RESULT_SCORE_BOX ? ("resultBox" === getMainDiv().lastElementChild.id && getMainDiv().removeChild(getMainDiv().lastChild), document.getElementById("scoreSum").innerHTML = "") : s === ResultBoxTypes.RESULT_BOX ? "resultBox" === getMainDiv().lastElementChild.id && getMainDiv().removeChild(getMainDiv().lastChild) : s === ResultBoxTypes.SCORE_BOX && (document.getElementById("scoreSum").innerHTML = "")
}

function getResultBox() {
    var e = document.createElement("div");
    e.setAttribute("class", "activity-result-box-outer"), e.setAttribute("id", "resultBox"), e.style.display = "none";
    var t = document.createElement("div");
    t.setAttribute("class", "activity-result-box-inner");
    var o = document.createElement("div");
    return o.setAttribute("class", "inference-text"), o.setAttribute("id", "resultText"), t.appendChild(o), e.appendChild(t), e
}

function getInference(e, t) {
    var o = [];
    if (e) {
        for (var s = 0, r = scoreHistory.length, n = 0; r > n; n++) {
            var l = Number(scoreHistory[n].rowIndex),
                a = getBoxInfo(l.toString()),
                c = Number(scoreHistory[n].cellIndex),
                i = Number(a.options[c].value);
            s += i
        }
        t === ResultBoxTypes.RESULT_SCORE_BOX ? o.push({
            inferenceText: analyzeInference(s),
            scoreSum: s
        }) : t === ResultBoxTypes.RESULT_BOX ? o.push({
            inferenceText: analyzeInference(s)
        }) : t === ResultBoxTypes.SCORE_BOX && o.push({
            scoreSum: s
        })
    }
    return o
}

function analyzeInference(sum) {
    for (var conclusion = "", range = getBoxInfo("999"), resultLength = range.result.length, item = 0; resultLength > item; item++)
        if (eval(sum + range.result[item].operator + range.result[item].value)) {
            conclusion = range.result[item].inference;
            break
        }
    return conclusion
}

function getRowId(e, t) {
    return "box".concat(e).concat("_row").concat(t + 1)
}

function expandRow(e, t, o) {
    0 === o ? (t.classList.add("score-block-top-inner"), e.classList.remove("score-block-select-top"), e.classList.add("score-block-top-outer")) : (t.classList.add("score-block-middle-inner"), e.classList.remove("score-block-select-middle"), e.classList.add("score-block-middle-outer"))
}

function collapseRow(e, t, o) {
    var s = !1,
        r = setInterval(function () {
            s ? (clearInterval(r), s = !1) : (t.removeAttribute("class"), "score-block-top-outer" === e.classList[0] ? (e.classList.remove("score-block-top-outer"), e.classList.add("score-block-select-top")) : (e.classList.remove("score-block-middle-outer"), e.classList.add("score-block-select-middle")), o[0].classList.remove("text-cell-middle"), o[0].classList.add("text-cell-select"), o[1].classList.remove("value-cell-middle"), o[1].classList.add("value-cell-select"), s = !0)
        }, 400)
}

function ScoreTable(e) {
    var t = new Object;
    return t.clickedRow = e.closest("tr").index() - 1, t.tableNodes = e[0].parentNode.childNodes, t.tableNodeId = e[0].parentNode.id, t.boxId = e[0].parentNode.parentNode.parentNode.id, t
}

function getAllScoreBlocks() {
    var e = document.getElementById("mainDiv");
    return e.childNodes
}

function getScoreLength() {
    return getAllScoreBlocks().length
}

function getTableBlockIndex(e) {
    for (var t = [], o = getAllScoreBlocks(), s = 0; s < o.length; s++) t.push(o[s].id);
    return t.indexOf(e)
}

function sendHistory() {
    Android.saveData(JSON.stringify(scoreHistory))
}

function saveHistory() {
    return JSON.stringify(scoreHistory)
}

function addFooter() {
    var e = document.getElementsByTagName("body")[0],
        t = document.createElement("div");
    t.setAttribute("class", StyleClass.FOOTER), t.setAttribute("id", "998");
    var o = getBoxInfo("998");
    document.createElement("table");
    "undefined" != typeof o.extraButtons && o.extraButtons.length > 0 && e.appendChild(addExtraButtons(o))
}

function addExtraButtons(e) {
    var t = e.extraButtons,
        o = document.createElement("div");
    o.setAttribute("class", "footer-div"), o.setAttribute("id", "998");
    var s = getColspanFactor(t),
        r = document.createElement("table");
    r.setAttribute("class", "footer-button-table");
    for (var n = 0; n < t.length; n++) r.appendChild(getExtraButtonRow(t[n], s));
    return e.hasAbbreviation && r.appendChild(getAbbreviationTextRow(e, s)), e.hasFootnote && r.appendChild(getReferenceTextRow(e, s)), o.appendChild(r), o
}

function getExtraButtonRow(e, t) {
    for (var o = document.createElement("tr"), s = e.buttonRow, r = makeSizer(s.length), n = t / s.length, l = 0; l < s.length; l++) {
        var a = document.createElement("td");
        a.setAttribute("class", "footer-button"), a.setAttribute("colspan", n.toString()), a.style.width = r, a.appendChild(getFooterButton(s[l])), o.appendChild(a)
    }
    return o
}

function getFooterButton(e) {
    var t = document.createElement("button");
    t.setAttribute("class", "mfooter-button"), t.setAttribute("id", e.buttonId);
    var o = Object.keys(e);
    if (0 === o.indexOf("image")) {
        var s = document.createElement("img");
        s.setAttribute("id", "algoPdf"), s.setAttribute("src", "algo_pdf_white.png"), s.setAttribute("alt", "Static version"), t.appendChild(s);
        var r = document.createElement("a");
        return r.setAttribute("href", "flipView"), r.appendChild(t), r
    }
    if (e.buttonId === "moreInfoButton") {
        var m = document.createElement("div");
        m.innerHTML = e.text;
        m = m.firstElementChild;
        t.innerHTML = m.innerText;
        m.innerHTML = "";
        return m.appendChild(t), m;
    }
    return t.innerHTML = document.createTextNode(e.text).data, t
}

function getReferenceTextRow(e, t) {
    var o = document.createElement("tr"),
        s = document.createTextNode(e.referenceText),
        r = document.createElement("p");
    r.setAttribute("class", StyleClass.TEXT_LEFT), r.innerHTML = s.data;
    var n = document.createElement("div");
    n.setAttribute("class", StyleClass.REFERENCE_BOX), n.appendChild(r);
    var l = document.createElement("td");
    return l.setAttribute("colspan", (t / 1).toString()), l.appendChild(n), o.appendChild(l), o
}

function getAbbreviationTextRow(e, t) {
    var o = document.createElement("tr"),
        s = document.createTextNode(e.abbreviationText),
        r = document.createElement("p");
    r.setAttribute("class", StyleClass.TEXT_LEFT), r.innerHTML = s.data;
    var n = document.createElement("div");
    n.setAttribute("class", StyleClass.REFERENCE_BOX), n.appendChild(r);
    var l = document.createElement("td");
    return l.setAttribute("colspan", (t / 1).toString()), l.appendChild(n), o.appendChild(l), o
}

function getColspanFactor(e) {
    for (var t = 1, o = 0; o < e.length; o++) t *= e[o].buttonRow.length;
    return t
}

function getBoxInfo(e) {
    for (var t = "", o = 0; o < scoreData.length; o++)
        if (scoreData[o].boxId === e) {
            t = scoreData[o];
            break
        }
    return t
}

function makeSizer(e) {
    return 100 / e + "%"
}

function getMainDiv() {
    return document.getElementById("mainDiv")
}

function loadHistory(e) {
    console.log(JSON.stringify(e));
    for (var t = 0; t < e.length; t++) {
        var o = e[t],
            s = document.getElementById(t + 1),
            r = document.getElementById(t + 1).childNodes,
            n = document.getElementById(s.parentNode.id),
            l = document.getElementById(s.parentNode.parentNode.id);
        if (JSON.parse(o.status) === !0) {
            for (var a = "box".concat(t + 1).concat("_row").concat(Number(o.cellIndex) + 2), c = 0; c < r.length; c++) c > 0 && r[c].id !== a && (document.getElementById(r[c].id).style.display = "none");
            collapseRow(l, n, document.getElementById(a).childNodes)
        } else if (JSON.parse(o.isExpanded) === !1) {
            l.classList.remove("score-block-middle-outer"), l.classList.add("score-block-blur"), n.classList.remove("score-block-middle-inner");
            for (var i = 0; i < r.length; i++)
                if (0 === i) {
                    var o = r[i].childNodes;
                    o[0].classList.remove("text-cell-top"), o[0].classList.add("text-cell-blur"), o[0].childNodes[0].classList.remove("question-text"), o[0].childNodes[0].classList.add("text-blur"), o[1].classList.remove("value-cell-top"), o[1].classList.add("value-cell-blur"), o[1].childNodes[0].classList.remove("max-value"), o[1].childNodes[0].classList.add("value-blur")
                } else document.getElementById(r[i].id).style.display = "none"
        }
    }
    generateResult()
}

function addStaticAssets() {
    var e = document.getElementById("staticMainDiv"),
        t = getBoxInfo("998");
    "" !== t.staticImageName && "undefined" != typeof t.staticImageName && e.appendChild(getStaticImage(t.staticImageName)), e.appendChild(addStaticFooter(t))
}

function addStaticFooter(e) {
    var t = document.createElement("table");
    return t.appendChild(getStaticFootNoteButtonRow(e)), e.hasAbbreviation && t.appendChild(getStaticAbbreviationTextRow(e)), e.hasFootnote && t.appendChild(getStaticReferenceTextRow(e)), t
}

function getStaticImage() {
    var e = document.createElement("img");
    return e.setAttribute("id", "staticImage"), window.setTimeout(e.setAttribute("src", loadStaticImage()), 500), e.style.width = "100%", e
}

function getStaticFootNoteButtonRow() {
    var e = document.createElement("tr"),
        t = document.createElement("td");
    return t.appendChild(addStaticFlipPdfButton()), e.appendChild(t), e
}

function getStaticReferenceTextRow(e) {
    var t = document.createElement("tr"),
        o = document.createTextNode(e.referenceText),
        s = document.createElement("p");
    s.setAttribute("class", StyleClass.TEXT_LEFT), s.innerHTML = o.data;
    var r = document.createElement("div");
    r.setAttribute("class", StyleClass.STATIC_REFERENCE_BOX), r.appendChild(s);
    var n = document.createElement("td");
    return n.appendChild(r), t.appendChild(n), t
}

function getStaticAbbreviationTextRow(e) {
    var t = document.createElement("tr"),
        o = document.createTextNode(e.abbreviationText),
        s = document.createElement("p");
    s.setAttribute("class", StyleClass.TEXT_LEFT), s.innerHTML = o.data;
    var r = document.createElement("div");
    r.setAttribute("class", StyleClass.STATIC_REFERENCE_BOX), r.appendChild(s);
    var n = document.createElement("td");
    return n.appendChild(r), t.appendChild(n), t
}

function addStaticFlipPdfButton() {
    var e = document.createElement("img");
    e.setAttribute("src", "algo.png"), e.setAttribute("class", StyleClass.PDF_IMAGE);
    var t = document.createElement("button");
    t.setAttribute("id", "pdf_button"), t.setAttribute("class", StyleClass.FLIP_PDF_BUTTON);
    var o = document.createElement("a");
    return o.setAttribute("href", "flipView"), t.appendChild(e), o.appendChild(t), o
}

function loadStaticImage() {
    var e = getBoxInfo("998"),
        t = e.staticImageName + "_portrait.png";
    return window.matchMedia("(orientation: portrait)").matches ? t = e.staticImageName + "_portrait.png" : window.matchMedia("(orientation: landscape)").matches && (t = e.staticImageName + "_landscape.png"), console.log(t), t
}
$(document).ready(function () {
    var e = !1;
    $("body").on("click", "tr", function () {
        var e = $(this).attr("id");
        "resetButton" !== e && "undefined" != typeof e && showNextScoreBlock($(this))
    }), $("body").on("click", "button", function () {
        switch ($(this).attr("id")) {
            case "refButton":
                e ? ($("#refButton").removeClass("footer-button-click").addClass("mfooter-button"), $(".reference-box").slideUpBox()) : ($("#refButton").removeClass("mfooter-button").addClass("footer-button-click"), $(".reference-box").slideDownBox(Scroll.LENGTH_LONG)), e = !e;
                break;
            case "pdfButton":
                break;
            case "resetButton":
                e = !e;
                for (var t = document.getElementById("mainDiv"); t.firstChild;) t.removeChild(t.firstChild);
                document.getElementsByTagName("body")[0].removeChild(document.getElementById("998")), null !== document.getElementById("headerDiv") && document.getElementsByTagName("body")[0].removeChild(document.getElementById("headerDiv")), loadDataFile("");
                break;
            case "moreInfoButton":
        }
    })
});
var scoreHistory = [],
    currentPosition;
const ScoreStyleClass = {
        QUESTION_TEXT: "question-text",
        MAX_VALUE: "max-value",
        OPTION_TEXT: "option-text",
        OPTION_VALUE: "option-value",
        TEXT_BLUR: "text-blur",
        VALUE_BLUR: "value-blur",
        SCORE_BLOCK_TOP_OUTER: "score-block-top-outer",
        SCORE_BLOCK_MIDDLE_OUTER: "score-block-middle-outer",
        SCORE_BLOCK_TOP_INNER: "score-block-top-inner",
        SCORE_BLOCK_MIDDLE_INNER: "score-block-middle-inner",
        SCORE_BLOCK_BLUR: "score-block-blur",
        SCORE_RESULT_OUTER: "score-result-outer",
        SCORE_RESULT_INNER: "score-result-inner"
    },
    Mode = {
        FOCUS: "focus",
        BLUR: "blur"
    },
    Dimensions = {
        INNER: "-inner",
        OUTER: "-outer"
    },
    Scroll = {
        LENGTH_SHORT: 100,
        LENGTH_LONG: 700
    },
    BoxTypes = {
        FOOTER: "footer"
    },
    FooterButtons = {
        PDF_BUTTON: "pdfButton",
        RESET_BUTTON: "resetButton",
        REF_BUTTON: "refButton",
        MORE_INFO_BUTTON: "moreInfoButton"
    },
    StyleClass = {
        ABB_BUTTON: "abb-button",
        PDF_IMAGE: "pdf-image",
        REFERENCE_BOX: "reference-box",
        STATIC_REFERENCE_BOX: "static-reference-box",
        FOOTER: "footer",
        FLIP_PDF_BUTTON: "flip-pdf-button",
        EXCEPTION_MESSAGE: "exception-message",
        RESET_BUTTON: "reset-button",
        TEXT_LEFT: "text-left"
    },
    ResultBoxTypes = {
        RESULT_BOX: "result-box",
        SCORE_BOX: "score-box",
        RESULT_SCORE_BOX: "result-score-box",
        NONE: "none",
        FOOTER: "footer"
    };
window.addEventListener("orientationchange", function () {
        "score" !== document.title.toLowerCase() && window.setTimeout(document.getElementById("staticImage").setAttribute("src", loadStaticImage()), 500)
    }, !1),
    function (e) {
        e.fn.change = function (t) {
            return 0 === t ? this.each(function () {
                e(this).css({
                    background: "#cc3d44",
                    color: "white",
                    boxShadow: "0 0 0 0 #ffffff"
                })
            }) : 1 === t ? this.each(function () {
                e(this).css({
                    background: "#ffffff",
                    color: "#999999",
                    boxShadow: "0 0 0 0 #ffffff"
                })
            }) : 2 === t ? this.each(function () {
                e(this).css({
                    background: "#ffffff",
                    color: "#999999",
                    boxShadow: "0 0 0 0 #ffffff"
                })
            }) : 3 === t ? this.each(function () {
                e(this).css({
                    background: "#ffffff",
                    color: "#999999",
                    boxShadow: "0 0 0 0 #ffffff"
                })
            }) : void 0
        }, e.fn.scroll = function (t) {
            return this.each(function () {
                e("html, body").animate({
                    scrollTop: e(this).offset().top
                }, t)
            })
        }, e.fn.slideUpBox = function () {
            return this.each(function () {
                e(this).slideUp("700", function () {
                    e(this).scroll()
                })
            })
        }, e.fn.slideDownBox = function (t) {
            return this.each(function () {
                e(this).slideDown("700", function () {
                    e(this).scroll(t)
                })
            })
        }
    }(jQuery);